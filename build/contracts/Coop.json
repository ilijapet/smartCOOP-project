{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "cooperant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "kilograms",
          "type": "uint256"
        }
      ],
      "name": "DepositFruits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "becomeCoopMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "coopTokenContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cooperants",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feePayed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "kg",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kg",
          "type": "uint256"
        }
      ],
      "name": "depositFruitsToCOOP",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_salje",
          "type": "address"
        }
      ],
      "name": "getUserAccountBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/access/Ownable.sol",
    "1": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC20/ERC20.sol",
    "2": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC20/IERC20.sol",
    "3": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/utils/Context.sol",
    "6": "contracts/Coop.sol"
  },
  "ast": {
    "absolutePath": "contracts/Coop.sol",
    "exportedSymbols": {
      "Context": [
        1035
      ],
      "Coop": [
        257
      ],
      "ERC20": [
        804
      ],
      "IERC20": [
        988
      ],
      "IERC20Metadata": [
        1013
      ],
      "Ownable": [
        908
      ]
    },
    "id": 258,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 23,
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 909,
        "src": "32:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ilijapet/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.1/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 24,
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 805,
        "src": "85:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25,
        "literals": [
          "solidity",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "543:22:6"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 908,
              "src": "585:7:6"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "585:7:6"
          }
        ],
        "contractDependencies": [
          908,
          1035
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 257,
        "linearizedBaseContracts": [
          257,
          908,
          1035
        ],
        "name": "Coop",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 30,
            "mutability": "mutable",
            "name": "coopToken",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "635:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$804",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 29,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 804,
                "src": "635:5:6"
              },
              "referencedDeclaration": 804,
              "src": "635:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$804",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ca968729",
            "id": 32,
            "mutability": "mutable",
            "name": "coopTokenContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "665:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "665:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Coop.Cooperant",
            "id": 37,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "feePayed",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "748:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 33,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "748:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "kg",
                "nodeType": "VariableDeclaration",
                "scope": 37,
                "src": "771:7:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "771:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Cooperant",
            "nodeType": "StructDefinition",
            "scope": 257,
            "src": "721:64:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "64eb384c",
            "id": 42,
            "mutability": "mutable",
            "name": "cooperants",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "847:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
              "typeString": "mapping(address => struct Coop.Cooperant)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 38,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "856:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "847:30:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                "typeString": "mapping(address => struct Coop.Cooperant)"
              },
              "valueType": {
                "id": 40,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 39,
                  "name": "Cooperant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37,
                  "src": "867:9:6"
                },
                "referencedDeclaration": 37,
                "src": "867:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Cooperant_$37_storage_ptr",
                  "typeString": "struct Coop.Cooperant"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "954:106:6",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "coopTokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "963:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "990:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "963:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "963:42:6"
                },
                {
                  "expression": {
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "coopToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1014:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$804",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 53,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "1032:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 52,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "1026:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$804_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1026:22:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$804",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1014:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$804",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "1014:34:6"
                }
              ]
            },
            "id": 58,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "929:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "928:25:6"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "954:0:6"
            },
            "scope": 257,
            "src": "916:144:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 64,
            "name": "NewMember",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1108:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1124:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:29:6"
            },
            "src": "1091:46:6"
          },
          {
            "anonymous": false,
            "id": 70,
            "name": "DepositFruits",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "cooperant",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1163:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "kilograms",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1182:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:35:6"
            },
            "src": "1142:56:6"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1230:108:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 73,
                              "name": "cooperants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1249:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                                "typeString": "mapping(address => struct Coop.Cooperant storage ref)"
                              }
                            },
                            "id": 76,
                            "indexExpression": {
                              "expression": {
                                "id": 74,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1260:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1260:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1249:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cooperant_$37_storage",
                              "typeString": "struct Coop.Cooperant storage ref"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feePayed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "1249:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1284:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1249:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c65617365206265636f6d6520536d617274434f4f50206d656d626572",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34ec85796c3a96e528d3c964a71c20685fdb80c0603471a52a1c3c9595165fec",
                          "typeString": "literal_string \"Please become SmartCOOP member\""
                        },
                        "value": "Please become SmartCOOP member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34ec85796c3a96e528d3c964a71c20685fdb80c0603471a52a1c3c9595165fec",
                          "typeString": "literal_string \"Please become SmartCOOP member\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1240:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:80:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:80:6"
                },
                {
                  "id": 83,
                  "nodeType": "PlaceholderStatement",
                  "src": "1330:1:6"
                }
              ]
            },
            "id": 85,
            "name": "onlyMembers",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:6"
            },
            "src": "1207:131:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1371:106:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 88,
                              "name": "cooperants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42,
                              "src": "1389:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                                "typeString": "mapping(address => struct Coop.Cooperant storage ref)"
                              }
                            },
                            "id": 91,
                            "indexExpression": {
                              "expression": {
                                "id": 89,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1400:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 90,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1400:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1389:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Cooperant_$37_storage",
                              "typeString": "struct Coop.Cooperant storage ref"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feePayed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "1389:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1424:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1389:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520616c726561647920706179206d656265727368697020666565",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3164067b8f336f828a0e0e5b380c523f3137f2ced771c79c94e3d729706fed5e",
                          "typeString": "literal_string \"You already pay mebership fee\""
                        },
                        "value": "You already pay mebership fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3164067b8f336f828a0e0e5b380c523f3137f2ced771c79c94e3d729706fed5e",
                          "typeString": "literal_string \"You already pay mebership fee\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1381:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1381:78:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1381:78:6"
                },
                {
                  "id": 98,
                  "nodeType": "PlaceholderStatement",
                  "src": "1469:1:6"
                }
              ]
            },
            "id": 100,
            "name": "onlyNewMembers",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:2:6"
            },
            "src": "1344:133:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1536:25:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 103,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1546:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:8:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:8:6"
                }
              ]
            },
            "id": 107,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:2:6"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:0:6"
            },
            "scope": 257,
            "src": "1515:46:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1662:283:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "1738:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 118,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "1720:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1720:7:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1712:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1712:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1712:16:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1712:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1712:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1712:34:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1934:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 115,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "1927:11:6"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 112,
                "modifierName": {
                  "id": 111,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 851,
                  "src": "1637:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1637:9:6"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1608:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1607:14:6"
            },
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1656:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1656:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1655:6:6"
            },
            "scope": 257,
            "src": "1590:355:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2090:233:6",
              "statements": [
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 135,
                          "name": "cooperants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2151:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                            "typeString": "mapping(address => struct Coop.Cooperant storage ref)"
                          }
                        },
                        "id": 138,
                        "indexExpression": {
                          "expression": {
                            "id": 136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2162:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2162:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2151:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cooperant_$37_storage",
                          "typeString": "struct Coop.Cooperant storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "feePayed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "2151:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 140,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2186:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2186:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2151:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:44:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2264:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2264:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2276:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2276:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 144,
                      "name": "NewMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "2254:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "EmitStatement",
                  "src": "2249:37:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2304:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 134,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "2297:11:6"
                }
              ]
            },
            "functionSelector": "bfd35626",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 131,
                "modifierName": {
                  "id": 130,
                  "name": "onlyNewMembers",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 100,
                  "src": "2060:14:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2060:14:6"
              }
            ],
            "name": "becomeCoopMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2042:2:6"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "2084:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2083:6:6"
            },
            "scope": 257,
            "src": "2017:306:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2408:178:6",
              "statements": [
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 163,
                          "name": "cooperants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2425:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                            "typeString": "mapping(address => struct Coop.Cooperant storage ref)"
                          }
                        },
                        "id": 166,
                        "indexExpression": {
                          "expression": {
                            "id": 164,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2436:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2436:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2425:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Cooperant_$37_storage",
                          "typeString": "struct Coop.Cooperant storage ref"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "kg",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2425:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 168,
                      "name": "_kg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2454:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2425:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:32:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 172,
                          "name": "_kg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "2487:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2492:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2496:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2492:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 176,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2491:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2487:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 171,
                      "name": "coopTokenTransferTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "2467:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:33:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2467:33:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 181,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2532:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2532:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 183,
                        "name": "_kg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "2544:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 180,
                      "name": "DepositFruits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "2517:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "EmitStatement",
                  "src": "2512:36:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2565:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 162,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "2558:11:6"
                }
              ]
            },
            "functionSelector": "4f557cb9",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 159,
                "modifierName": {
                  "id": 158,
                  "name": "onlyMembers",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85,
                  "src": "2381:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2381:11:6"
              }
            ],
            "name": "depositFruitsToCOOP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "_kg",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2364:8:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2363:10:6"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2402:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2402:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2401:6:6"
            },
            "scope": 257,
            "src": "2335:251:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "2695:114:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 200,
                            "name": "cooperants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2713:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                              "typeString": "mapping(address => struct Coop.Cooperant storage ref)"
                            }
                          },
                          "id": 202,
                          "indexExpression": {
                            "id": 201,
                            "name": "_salje",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2724:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2713:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cooperant_$37_storage",
                            "typeString": "struct Coop.Cooperant storage ref"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feePayed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34,
                        "src": "2713:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 204,
                            "name": "cooperants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2742:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Cooperant_$37_storage_$",
                              "typeString": "mapping(address => struct Coop.Cooperant storage ref)"
                            }
                          },
                          "id": 206,
                          "indexExpression": {
                            "id": 205,
                            "name": "_salje",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2753:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2742:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Cooperant_$37_storage",
                            "typeString": "struct Coop.Cooperant storage ref"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "kg",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "2742:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 210,
                              "name": "_salje",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "2785:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 208,
                              "name": "coopToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "2765:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$804",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 356,
                            "src": "2765:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2765:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2794:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2798:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2794:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 215,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2793:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2765:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 217,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2712:90:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 218,
                  "nodeType": "Return",
                  "src": "2705:97:6"
                }
              ]
            },
            "functionSelector": "3f7f4f17",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAccountBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_salje",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "2631:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2630:16:6"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "2668:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "2677:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "2686:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2686:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2667:27:6"
            },
            "scope": 257,
            "src": "2600:209:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "2882:76:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 229,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 837,
                          "src": "2926:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2926:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 231,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2935:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2935:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 233,
                        "name": "_kg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "2947:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "coopToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "2907:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$804",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 378,
                      "src": "2907:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2907:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 226,
                  "id": 235,
                  "nodeType": "Return",
                  "src": "2900:51:6"
                }
              ]
            },
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "coopTokenTransferTo",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_kg",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "2849:8:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2848:10:6"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "2876:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:6:6"
            },
            "scope": 257,
            "src": "2819:139:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "3051:76:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 248,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3095:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3095:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 250,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 837,
                          "src": "3107:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3107:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 252,
                        "name": "_kg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "3116:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 246,
                        "name": "coopToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3076:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$804",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 378,
                      "src": "3076:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 245,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "3069:51:6"
                }
              ]
            },
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 242,
                "modifierName": {
                  "id": 241,
                  "name": "onlyMembers",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85,
                  "src": "3024:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3024:11:6"
              }
            ],
            "name": "coopTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_kg",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3006:8:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3006:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3005:10:6"
            },
            "returnParameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "3045:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3045:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3044:6:6"
            },
            "scope": 257,
            "src": "2974:153:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 258,
        "src": "568:2567:6"
      }
    ],
    "src": "32:3103:6"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516109ac3803806109ac83398101604081905261002f916100c2565b61003f61003a61006e565b610072565b600280546001600160a01b039092166001600160a01b03199283168117909155600180549092161790556100f0565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d3578081fd5b81516001600160a01b03811681146100e9578182fd5b9392505050565b6108ad806100ff6000396000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a61461013e5780638da5cb5b14610155578063bfd3562614610177578063ca9687291461017f578063f2fde38b1461019457610086565b80632e1a7d4d146100985780633f7f4f17146100c15780634f557cb9146100f057806364eb384c14610110575b34801561009257600080fd5b50600080fd5b6100ab6100a6366004610671565b6101b4565b6040516100b891906106f2565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc366004610623565b610247565b6040516100b8939291906107f4565b3480156100fc57600080fd5b506100ab61010b366004610671565b610307565b34801561011c57600080fd5b5061013061012b366004610623565b6103b7565b6040516100b89291906107e6565b34801561014a57600080fd5b506101536103d0565b005b34801561016157600080fd5b5061016a61041b565b6040516100b891906106a1565b6100ab61042a565b34801561018b57600080fd5b5061016a6104bb565b3480156101a057600080fd5b506101536101af366004610623565b6104ca565b60006101be61053b565b6001600160a01b03166101cf61041b565b6001600160a01b0316146101fe5760405162461bcd60e51b81526004016101f5906107b1565b60405180910390fd5b61020661041b565b6001600160a01b03166108fc839081150290604051600060405180830381858888f1935050505015801561023e573d6000803e3d6000fd5b50600192915050565b6001600160a01b038082166000908152600360205260408082208054600191820154915492516370a0823160e01b8152939485948594929392670de0b6b3a76400009216906370a08231906102a0908a906004016106a1565b60206040518083038186803b1580156102b857600080fd5b505afa1580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f09190610689565b6102fa9190610822565b9250925092509193909250565b336000908152600360205260408120546103335760405162461bcd60e51b81526004016101f59061077a565b336000908152600360205260408120600101805484929061035590849061080a565b90915550610375905061037083670de0b6b3a7640000610842565b61053f565b507f255fc9735037ba0730909adcc04691fb7c2dd775114a7e9533ececef8248e52433836040516103a79291906106d9565b60405180910390a1506001919050565b6003602052600090815260409020805460019091015482565b6103d861053b565b6001600160a01b03166103e961041b565b6001600160a01b03161461040f5760405162461bcd60e51b81526004016101f5906107b1565b61041960006105d3565b565b6000546001600160a01b031690565b33600090815260036020526040812054156104575760405162461bcd60e51b81526004016101f590610743565b336000908152600360205260408120805434929061047690849061080a565b90915550506040517f7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c283906104ad90339034906106d9565b60405180910390a150600190565b6002546001600160a01b031681565b6104d261053b565b6001600160a01b03166104e361041b565b6001600160a01b0316146105095760405162461bcd60e51b81526004016101f5906107b1565b6001600160a01b03811661052f5760405162461bcd60e51b81526004016101f5906106fd565b610538816105d3565b50565b3390565b6001546000906001600160a01b031663beabacc861055b61041b565b33856040518463ffffffff1660e01b815260040161057b939291906106b5565b602060405180830381600087803b15801561059557600080fd5b505af11580156105a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cd9190610651565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610634578081fd5b81356001600160a01b038116811461064a578182fd5b9392505050565b600060208284031215610662578081fd5b8151801515811461064a578182fd5b600060208284031215610682578081fd5b5035919050565b60006020828403121561069a578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601d908201527f596f7520616c726561647920706179206d656265727368697020666565000000604082015260600190565b6020808252601e908201527f506c65617365206265636f6d6520536d617274434f4f50206d656d6265720000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b6000821982111561081d5761081d610861565b500190565b60008261083d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561085c5761085c610861565b500290565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220fa06a0c73245b2b1ea53a917e22bfa5e319c97af436defb39b6febfefab07e2764736f6c63430008000033",
  "bytecodeSha1": "008c8b2d8cf6e0b9b4dfd5030d7d527ecd9fe375",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "Coop",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "19": [
            1185,
            1208,
            true
          ],
          "20": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "17": [
            2131,
            2148
          ],
          "18": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "9": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "13": [
            1926,
            1999
          ],
          "14": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "15": [
            659,
            676
          ]
        }
      },
      "6": {
        "Coop.<fallback>": {
          "0": [
            1546,
            1554
          ]
        },
        "Coop.becomeCoopMember": {
          "10": [
            2151,
            2195
          ],
          "11": [
            2249,
            2286
          ],
          "12": [
            2297,
            2308
          ]
        },
        "Coop.coopTokenTransferTo": {
          "16": [
            2900,
            2951
          ]
        },
        "Coop.depositFruitsToCOOP": {
          "4": [
            2425,
            2457
          ],
          "5": [
            2467,
            2500
          ],
          "6": [
            2512,
            2548
          ],
          "7": [
            2558,
            2569
          ]
        },
        "Coop.getUserAccountBalance": {
          "3": [
            2705,
            2802
          ]
        },
        "Coop.withdraw": {
          "1": [
            1712,
            1746
          ],
          "2": [
            1927,
            1938
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.3.1/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100865760003560e01c8063715018a611610059578063715018a61461013e5780638da5cb5b14610155578063bfd3562614610177578063ca9687291461017f578063f2fde38b1461019457610086565b80632e1a7d4d146100985780633f7f4f17146100c15780634f557cb9146100f057806364eb384c14610110575b34801561009257600080fd5b50600080fd5b6100ab6100a6366004610671565b6101b4565b6040516100b891906106f2565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc366004610623565b610247565b6040516100b8939291906107f4565b3480156100fc57600080fd5b506100ab61010b366004610671565b610307565b34801561011c57600080fd5b5061013061012b366004610623565b6103b7565b6040516100b89291906107e6565b34801561014a57600080fd5b506101536103d0565b005b34801561016157600080fd5b5061016a61041b565b6040516100b891906106a1565b6100ab61042a565b34801561018b57600080fd5b5061016a6104bb565b3480156101a057600080fd5b506101536101af366004610623565b6104ca565b60006101be61053b565b6001600160a01b03166101cf61041b565b6001600160a01b0316146101fe5760405162461bcd60e51b81526004016101f5906107b1565b60405180910390fd5b61020661041b565b6001600160a01b03166108fc839081150290604051600060405180830381858888f1935050505015801561023e573d6000803e3d6000fd5b50600192915050565b6001600160a01b038082166000908152600360205260408082208054600191820154915492516370a0823160e01b8152939485948594929392670de0b6b3a76400009216906370a08231906102a0908a906004016106a1565b60206040518083038186803b1580156102b857600080fd5b505afa1580156102cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f09190610689565b6102fa9190610822565b9250925092509193909250565b336000908152600360205260408120546103335760405162461bcd60e51b81526004016101f59061077a565b336000908152600360205260408120600101805484929061035590849061080a565b90915550610375905061037083670de0b6b3a7640000610842565b61053f565b507f255fc9735037ba0730909adcc04691fb7c2dd775114a7e9533ececef8248e52433836040516103a79291906106d9565b60405180910390a1506001919050565b6003602052600090815260409020805460019091015482565b6103d861053b565b6001600160a01b03166103e961041b565b6001600160a01b03161461040f5760405162461bcd60e51b81526004016101f5906107b1565b61041960006105d3565b565b6000546001600160a01b031690565b33600090815260036020526040812054156104575760405162461bcd60e51b81526004016101f590610743565b336000908152600360205260408120805434929061047690849061080a565b90915550506040517f7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c283906104ad90339034906106d9565b60405180910390a150600190565b6002546001600160a01b031681565b6104d261053b565b6001600160a01b03166104e361041b565b6001600160a01b0316146105095760405162461bcd60e51b81526004016101f5906107b1565b6001600160a01b03811661052f5760405162461bcd60e51b81526004016101f5906106fd565b610538816105d3565b50565b3390565b6001546000906001600160a01b031663beabacc861055b61041b565b33856040518463ffffffff1660e01b815260040161057b939291906106b5565b602060405180830381600087803b15801561059557600080fd5b505af11580156105a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cd9190610651565b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610634578081fd5b81356001600160a01b038116811461064a578182fd5b9392505050565b600060208284031215610662578081fd5b8151801515811461064a578182fd5b600060208284031215610682578081fd5b5035919050565b60006020828403121561069a578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601d908201527f596f7520616c726561647920706179206d656265727368697020666565000000604082015260600190565b6020808252601e908201527f506c65617365206265636f6d6520536d617274434f4f50206d656d6265720000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b918252602082015260400190565b9283526020830191909152604082015260600190565b6000821982111561081d5761081d610861565b500190565b60008261083d57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561085c5761085c610861565b500290565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220fa06a0c73245b2b1ea53a917e22bfa5e319c97af436defb39b6febfefab07e2764736f6c63430008000033",
  "deployedSourceMap": "568:2567:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:8;;;1590:355;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2600:209;;;;;;;;;;-1:-1:-1;2600:209:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;2335:251::-;;;;;;;;;;-1:-1:-1;2335:251:6;;;;;:::i;:::-;;:::i;847:48::-;;;;;;;;;;-1:-1:-1;847:48:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;:::-;;973:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2017:306:6:-;;;:::i;665:39::-;;;;;;;;;;;;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;1590:355:6:-;1656:4;1196:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1720:7:6::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;1712:25:6::1;:34;1738:7;1712:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1934:4:6::1;::::0;1590:355;-1:-1:-1;;1590:355:6:o;2600:209::-;-1:-1:-1;;;;;2713:18:6;;;2668:7;2713:18;;;:10;:18;;;;;;:27;;2742:21;;;;;2765:9;;:27;;-1:-1:-1;;;2765:27:6;;2668:7;;;;;;2713:27;;2742:21;2794:6;;2765:9;;:19;;:27;;2724:6;;2765:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;;:::i;:::-;2705:97;;;;;;2600:209;;;;;:::o;2335:251::-;1260:10;2402:4;1249:22;;;:10;:22;;;;;:31;1240:80;;;;-1:-1:-1;;;1240:80:6;;;;;;;:::i;:::-;2436:10:::1;2425:22;::::0;;;:10:::1;:22;::::0;;;;:25:::1;;:32:::0;;2454:3;;2425:22;:32:::1;::::0;2454:3;;2425:32:::1;:::i;:::-;::::0;;;-1:-1:-1;2467:33:6::1;::::0;-1:-1:-1;2487:12:6::1;:3:::0;2492:6:::1;2487:12;:::i;:::-;2467:19;:33::i;:::-;;2517:31;2532:10;2544:3;2517:31;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;2565:4:6::1;2335:251:::0;;;:::o;847:48::-;;;;;;;;;;;;;;;;;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;:::o;2017:306:6:-;1400:10;2084:4;1389:22;;;:10;:22;;;;;:31;:36;1381:78;;;;-1:-1:-1;;;1381:78:6;;;;;;;:::i;:::-;2162:10:::1;2151:22;::::0;;;:10:::1;:22;::::0;;;;:44;;2186:9:::1;::::0;2151:22;:44:::1;::::0;2186:9;;2151:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;2254:32:6::1;::::0;::::1;::::0;::::1;::::0;2264:10:::1;::::0;2276:9:::1;::::0;2254:32:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;2304:4:6::1;2017:306:::0;:::o;665:39::-;;;-1:-1:-1;;;;;665:39:6;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:0;;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:0::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;587:96:4:-;666:10;587:96;:::o;2819:139:6:-;2907:9;;2876:4;;-1:-1:-1;;;;;2907:9:6;:18;2926:7;:5;:7::i;:::-;2935:10;2947:3;2907:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2900:51;2819:139;-1:-1:-1;;2819:139:6:o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:306:7:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:7;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:7:o;325:297::-;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:7;;697:120;-1:-1:-1;697:120:7:o;822:194::-;;945:2;933:9;924:7;920:23;916:32;913:2;;;966:6;958;951:22;913:2;-1:-1:-1;994:16:7;;903:113;-1:-1:-1;903:113:7:o;1021:203::-;-1:-1:-1;;;;;1185:32:7;;;;1167:51;;1155:2;1140:18;;1122:102::o;1229:375::-;-1:-1:-1;;;;;1487:15:7;;;1469:34;;1539:15;;;;1534:2;1519:18;;1512:43;1586:2;1571:18;;1564:34;;;;1419:2;1404:18;;1386:218::o;1609:274::-;-1:-1:-1;;;;;1801:32:7;;;;1783:51;;1865:2;1850:18;;1843:34;1771:2;1756:18;;1738:145::o;1888:187::-;2053:14;;2046:22;2028:41;;2016:2;2001:18;;1983:92::o;2080:402::-;2282:2;2264:21;;;2321:2;2301:18;;;2294:30;2360:34;2355:2;2340:18;;2333:62;-1:-1:-1;;;2426:2:7;2411:18;;2404:36;2472:3;2457:19;;2254:228::o;2487:353::-;2689:2;2671:21;;;2728:2;2708:18;;;2701:30;2767:31;2762:2;2747:18;;2740:59;2831:2;2816:18;;2661:179::o;2845:354::-;3047:2;3029:21;;;3086:2;3066:18;;;3059:30;3125:32;3120:2;3105:18;;3098:60;3190:2;3175:18;;3019:180::o;3204:356::-;3406:2;3388:21;;;3425:18;;;3418:30;3484:34;3479:2;3464:18;;3457:62;3551:2;3536:18;;3378:182::o;3565:248::-;3739:25;;;3795:2;3780:18;;3773:34;3727:2;3712:18;;3694:119::o;3818:319::-;4020:25;;;4076:2;4061:18;;4054:34;;;;4119:2;4104:18;;4097:34;4008:2;3993:18;;3975:162::o;4142:128::-;;4213:1;4209:6;4206:1;4203:13;4200:2;;;4219:18;;:::i;:::-;-1:-1:-1;4255:9:7;;4190:80::o;4275:217::-;;4341:1;4331:2;;-1:-1:-1;;;4366:31:7;;4420:4;4417:1;4410:15;4448:4;4373:1;4438:15;4331:2;-1:-1:-1;4477:9:7;;4321:171::o;4497:168::-;;4603:1;4599;4595:6;4591:14;4588:1;4585:21;4580:1;4573:9;4566:17;4562:45;4559:2;;;4610:18;;:::i;:::-;-1:-1:-1;4650:9:7;;4549:116::o;4670:127::-;4731:10;4726:3;4722:20;4719:1;4712:31;4762:4;4759:1;4752:15;4786:4;4783:1;4776:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    568,
    3135
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0xBFD35626 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xCA968729 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x194 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3F7F4F17 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x4F557CB9 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x64EB384C EQ PUSH2 0x110 JUMPI JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x1B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x42A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x4BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x153 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE PUSH2 0x53B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CF PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x206 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x23E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 SLOAD SWAP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 DUP6 SWAP5 DUP6 SWAP5 SWAP3 SWAP4 SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2A0 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x822 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x77A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x355 SWAP1 DUP5 SWAP1 PUSH2 0x80A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x375 SWAP1 POP PUSH2 0x370 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x53F JUMP JUMPDEST POP PUSH32 0x255FC9735037BA0730909ADCC04691FB7C2DD775114A7E9533ECECEF8248E524 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x3A7 SWAP3 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3E9 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x419 PUSH1 0x0 PUSH2 0x5D3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x457 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x743 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x476 SWAP1 DUP5 SWAP1 PUSH2 0x80A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x7F48E4F7F3EF2C63408B16A799B8516CB879C145386AEDD51A36938A02A1C283 SWAP1 PUSH2 0x4AD SWAP1 CALLER SWAP1 CALLVALUE SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0x53B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4E3 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x538 DUP2 PUSH2 0x5D3 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBEABACC8 PUSH2 0x55B PUSH2 0x41B JUMP JUMPDEST CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x634 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64A JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x662 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x64A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x682 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69A JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920706179206D656265727368697020666565000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x506C65617365206265636F6D6520536D617274434F4F50206D656D6265720000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x81D JUMPI PUSH2 0x81D PUSH2 0x861 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x83D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x85C JUMPI PUSH2 0x85C PUSH2 0x861 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL MOD LOG0 0xC7 ORIGIN GASLIMIT 0xB2 0xB1 0xEA MSTORE8 0xA9 OR 0xE2 0x2B STATICCALL 0x5E BALANCE SWAP13 SWAP8 0xAF NUMBER PUSH14 0xEFB39B6FEBFEFAB07E2764736F6C PUSH4 0x43000800 STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        568,
        3135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86"
    },
    "12": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "GT",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "36": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E"
    },
    "40": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "47": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155"
    },
    "51": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBFD35626"
    },
    "58": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x177"
    },
    "62": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCA968729"
    },
    "69": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "73": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "75": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "81": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x194"
    },
    "84": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "85": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x86"
    },
    "88": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMP",
      "path": "6"
    },
    "89": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "90": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "91": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2E1A7D4D"
    },
    "96": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "97": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98"
    },
    "100": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3F7F4F17"
    },
    "107": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "108": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC1"
    },
    "111": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4F557CB9"
    },
    "118": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "119": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0"
    },
    "122": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x64EB384C"
    },
    "129": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "EQ",
      "path": "6"
    },
    "130": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x110"
    },
    "133": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "138": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x92"
    },
    "141": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "142": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "144": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "DUP1",
      "path": "6"
    },
    "145": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "REVERT",
      "path": "6"
    },
    "146": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        568,
        3135
      ],
      "op": "POP",
      "path": "6"
    },
    "148": {
      "fn": "Coop.<fallback>",
      "offset": [
        1546,
        1554
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x0"
    },
    "150": {
      "fn": "Coop.<fallback>",
      "offset": [
        1546,
        1554
      ],
      "op": "DUP1",
      "path": "6"
    },
    "151": {
      "fn": "Coop.<fallback>",
      "offset": [
        1546,
        1554
      ],
      "op": "REVERT",
      "path": "6"
    },
    "152": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "153": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "156": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6"
    },
    "159": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "160": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "162": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x671"
    },
    "165": {
      "fn": "Coop.withdraw",
      "jump": "i",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "166": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "167": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B4"
    },
    "170": {
      "fn": "Coop.withdraw",
      "jump": "i",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "171": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "172": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "174": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "175": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8"
    },
    "178": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "179": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "180": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F2"
    },
    "183": {
      "fn": "Coop.withdraw",
      "jump": "i",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "184": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "185": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "187": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "188": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "DUP1",
      "path": "6"
    },
    "189": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "190": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "SUB",
      "path": "6"
    },
    "191": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "192": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "RETURN",
      "path": "6"
    },
    "193": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "194": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "195": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "196": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "197": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCD"
    },
    "200": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "201": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "203": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "DUP1",
      "path": "6"
    },
    "204": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "REVERT",
      "path": "6"
    },
    "205": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "206": {
      "op": "POP"
    },
    "207": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE1"
    },
    "210": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDC"
    },
    "213": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "214": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "216": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x623"
    },
    "219": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "i",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMP",
      "path": "6"
    },
    "220": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "221": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x247"
    },
    "224": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "i",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMP",
      "path": "6"
    },
    "225": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "226": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "228": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "229": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8"
    },
    "232": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "233": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "234": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "235": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "236": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7F4"
    },
    "239": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "i",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMP",
      "path": "6"
    },
    "240": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "241": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "242": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "DUP1",
      "path": "6"
    },
    "243": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "244": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFC"
    },
    "247": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "248": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "250": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "DUP1",
      "path": "6"
    },
    "251": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "REVERT",
      "path": "6"
    },
    "252": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "253": {
      "op": "POP"
    },
    "254": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "257": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10B"
    },
    "260": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "261": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "263": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x671"
    },
    "266": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "267": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "268": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "271": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "272": {
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "273": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "274": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "DUP1",
      "path": "6"
    },
    "275": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "276": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C"
    },
    "279": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "280": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "282": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "DUP1",
      "path": "6"
    },
    "283": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "REVERT",
      "path": "6"
    },
    "284": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "285": {
      "op": "POP"
    },
    "286": {
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x130"
    },
    "289": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B"
    },
    "292": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "293": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "295": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x623"
    },
    "298": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        847,
        895
      ],
      "op": "JUMP",
      "path": "6"
    },
    "299": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "300": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B7"
    },
    "303": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        847,
        895
      ],
      "op": "JUMP",
      "path": "6"
    },
    "304": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "305": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "307": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "308": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8"
    },
    "311": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "312": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "313": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "314": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7E6"
    },
    "317": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        847,
        895
      ],
      "op": "JUMP",
      "path": "6"
    },
    "318": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "320": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "321": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "322": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "329": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "332": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "335": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0"
    },
    "338": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "STOP",
      "path": "0"
    },
    "341": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "343": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "344": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "345": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161"
    },
    "348": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "349": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "352": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "353": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "POP",
      "path": "0"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "361": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "365": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "366": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "369": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "370": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "371": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A1"
    },
    "374": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2017,
        2323
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "376": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2017,
        2323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "379": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2017,
        2323
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x42A"
    },
    "382": {
      "fn": "Coop.becomeCoopMember",
      "jump": "i",
      "offset": [
        2017,
        2323
      ],
      "op": "JUMP",
      "path": "6"
    },
    "383": {
      "offset": [
        665,
        704
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "385": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "DUP1",
      "path": "6"
    },
    "386": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "387": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "390": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "391": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "393": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "DUP1",
      "path": "6"
    },
    "394": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "REVERT",
      "path": "6"
    },
    "395": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "396": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "POP",
      "path": "6"
    },
    "397": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A"
    },
    "400": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BB"
    },
    "403": {
      "fn": "Coop.becomeCoopMember",
      "jump": "i",
      "offset": [
        665,
        704
      ],
      "op": "JUMP",
      "path": "6"
    },
    "404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0"
    },
    "411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x153"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x623"
    },
    "430": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "435": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "437": {
      "fn": "Coop.withdraw",
      "offset": [
        1656,
        1660
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "439": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "442": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "445": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "Coop.withdraw",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "op": "SUB"
    },
    "455": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "456": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF"
    },
    "459": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "462": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "463": {
      "fn": "Coop.withdraw",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "473": {
      "fn": "Coop.withdraw",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "474": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FE"
    },
    "477": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "478": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "480": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "489": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "490": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "492": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "493": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "496": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "497": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "500": {
      "fn": "Coop.withdraw",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "501": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "502": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "504": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "505": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "506": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "507": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "508": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "509": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "510": {
      "fn": "Coop.withdraw",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "511": {
      "fn": "Coop.withdraw",
      "offset": [
        1720,
        1727
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x206"
    },
    "514": {
      "fn": "Coop.withdraw",
      "offset": [
        1720,
        1725
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41B"
    },
    "517": {
      "fn": "Coop.withdraw",
      "jump": "i",
      "offset": [
        1720,
        1727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "518": {
      "fn": "Coop.withdraw",
      "offset": [
        1720,
        1727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "SUB"
    },
    "527": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1737
      ],
      "op": "AND",
      "path": "6"
    },
    "528": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8FC"
    },
    "531": {
      "fn": "Coop.withdraw",
      "offset": [
        1738,
        1745
      ],
      "op": "DUP4",
      "path": "6"
    },
    "532": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "533": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP2",
      "path": "6"
    },
    "534": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "535": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "MUL",
      "path": "6"
    },
    "536": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "537": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "539": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "540": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "542": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "544": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "545": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP1",
      "path": "6"
    },
    "546": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP4",
      "path": "6"
    },
    "547": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "SUB",
      "path": "6"
    },
    "548": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP2",
      "path": "6"
    },
    "549": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP6",
      "path": "6"
    },
    "550": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP9",
      "path": "6"
    },
    "551": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP9",
      "path": "6"
    },
    "552": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "CALL",
      "path": "6"
    },
    "553": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "554": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "POP",
      "path": "6"
    },
    "555": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "POP",
      "path": "6"
    },
    "556": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "POP",
      "path": "6"
    },
    "557": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "POP",
      "path": "6"
    },
    "558": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "559": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP1",
      "path": "6"
    },
    "560": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "561": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23E"
    },
    "564": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "565": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "566": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "568": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "DUP1",
      "path": "6"
    },
    "569": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "570": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "571": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "573": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "REVERT",
      "path": "6"
    },
    "574": {
      "fn": "Coop.withdraw",
      "offset": [
        1712,
        1746
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "fn": "Coop.withdraw",
      "offset": [
        1934,
        1938
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "578": {
      "fn": "Coop.withdraw",
      "offset": [
        1934,
        1938
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "579": {
      "fn": "Coop.withdraw",
      "offset": [
        1590,
        1945
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "fn": "Coop.withdraw",
      "jump": "o",
      "offset": [
        1590,
        1945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "583": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "590": {
      "op": "SHL"
    },
    "591": {
      "op": "SUB"
    },
    "592": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 3
    },
    "593": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "DUP3",
      "path": "6"
    },
    "594": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "AND",
      "path": "6"
    },
    "595": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "597": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "598": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "DUP2",
      "path": "6"
    },
    "599": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "600": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2723
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "602": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "604": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "605": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "607": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "DUP1",
      "path": "6"
    },
    "608": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "DUP3",
      "path": "6"
    },
    "609": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2731
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "610": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2740
      ],
      "op": "DUP1",
      "path": "6"
    },
    "611": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2740
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "612": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2742,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "614": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2742,
        2763
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "615": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2742,
        2763
      ],
      "op": "DUP3",
      "path": "6"
    },
    "616": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2742,
        2763
      ],
      "op": "ADD",
      "path": "6"
    },
    "617": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2742,
        2763
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "618": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2774
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "619": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2774
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "620": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "621": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "622": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "629": {
      "op": "SHL"
    },
    "630": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP2",
      "path": "6"
    },
    "631": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "632": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "633": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "634": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "DUP6",
      "path": "6"
    },
    "635": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "636": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "DUP6",
      "path": "6"
    },
    "637": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2668,
        2675
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "638": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2740
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "639": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2713,
        2740
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "640": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2742,
        2763
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "641": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2794,
        2800
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "650": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2794,
        2800
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "651": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2774
      ],
      "op": "AND",
      "path": "6"
    },
    "652": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "653": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2784
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "658": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2784
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "659": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A0"
    },
    "662": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "663": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2724,
        2730
      ],
      "op": "DUP11",
      "path": "6"
    },
    "664": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2724,
        2730
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "665": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "667": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ADD",
      "path": "6"
    },
    "668": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A1"
    },
    "671": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "i",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMP",
      "path": "6"
    },
    "672": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "673": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "675": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "677": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "678": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "679": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP4",
      "path": "6"
    },
    "680": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "SUB",
      "path": "6"
    },
    "681": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP2",
      "path": "6"
    },
    "682": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP7",
      "path": "6"
    },
    "683": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "684": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "685": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "686": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "687": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "688": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "691": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "692": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "694": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "695": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "REVERT",
      "path": "6"
    },
    "696": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "POP",
      "path": "6"
    },
    "698": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "GAS",
      "path": "6"
    },
    "699": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "700": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "701": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "702": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "703": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CC"
    },
    "706": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "707": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "708": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "710": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "711": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "712": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "713": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "715": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "REVERT",
      "path": "6"
    },
    "716": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "717": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "POP",
      "path": "6"
    },
    "718": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "POP",
      "path": "6"
    },
    "719": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "POP",
      "path": "6"
    },
    "720": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "POP",
      "path": "6"
    },
    "721": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "723": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "724": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "725": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "727": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "NOT",
      "path": "6"
    },
    "728": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "730": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP3",
      "path": "6"
    },
    "731": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ADD",
      "path": "6"
    },
    "732": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "AND",
      "path": "6"
    },
    "733": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP3",
      "path": "6"
    },
    "734": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ADD",
      "path": "6"
    },
    "735": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP1",
      "path": "6"
    },
    "736": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "738": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "739": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "POP",
      "path": "6"
    },
    "740": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "DUP2",
      "path": "6"
    },
    "741": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "ADD",
      "path": "6"
    },
    "742": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "743": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F0"
    },
    "746": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "747": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "748": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x689"
    },
    "751": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "i",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMP",
      "path": "6"
    },
    "752": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2792
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "753": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2801
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FA"
    },
    "756": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2801
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "757": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2801
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "758": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2801
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x822"
    },
    "761": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "i",
      "offset": [
        2765,
        2801
      ],
      "op": "JUMP",
      "path": "6"
    },
    "762": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2765,
        2801
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "763": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2705,
        2802
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "764": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2705,
        2802
      ],
      "op": "POP",
      "path": "6"
    },
    "765": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2705,
        2802
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "766": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2705,
        2802
      ],
      "op": "POP",
      "path": "6"
    },
    "767": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2705,
        2802
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "768": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2705,
        2802
      ],
      "op": "POP",
      "path": "6"
    },
    "769": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "770": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "771": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "772": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "773": {
      "fn": "Coop.getUserAccountBalance",
      "offset": [
        2600,
        2809
      ],
      "op": "POP",
      "path": "6"
    },
    "774": {
      "fn": "Coop.getUserAccountBalance",
      "jump": "o",
      "offset": [
        2600,
        2809
      ],
      "op": "JUMP",
      "path": "6"
    },
    "775": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "776": {
      "offset": [
        1260,
        1270
      ],
      "op": "CALLER",
      "path": "6"
    },
    "777": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2402,
        2406
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "779": {
      "offset": [
        1249,
        1271
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "780": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1249,
        1271
      ],
      "op": "DUP2",
      "path": "6"
    },
    "781": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1249,
        1271
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "782": {
      "offset": [
        1249,
        1259
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "784": {
      "offset": [
        1249,
        1271
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "786": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1249,
        1271
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "787": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1249,
        1271
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "789": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1249,
        1271
      ],
      "op": "DUP2",
      "path": "6"
    },
    "790": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1249,
        1271
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "791": {
      "offset": [
        1249,
        1280
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "792": {
      "offset": [
        1240,
        1320
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x333"
    },
    "795": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "796": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "798": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "805": {
      "op": "SHL"
    },
    "806": {
      "offset": [
        1240,
        1320
      ],
      "op": "DUP2",
      "path": "6"
    },
    "807": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "808": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "810": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "ADD",
      "path": "6"
    },
    "811": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F5"
    },
    "814": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "815": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x77A"
    },
    "818": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        1240,
        1320
      ],
      "op": "JUMP",
      "path": "6"
    },
    "819": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        1240,
        1320
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "820": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2436,
        2446
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 4
    },
    "821": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "823": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "824": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "DUP2",
      "path": "6"
    },
    "825": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "826": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2435
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "828": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "830": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "831": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "833": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "DUP2",
      "path": "6"
    },
    "834": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "835": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2450
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "837": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2450
      ],
      "op": "ADD",
      "path": "6"
    },
    "838": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "DUP1",
      "path": "6"
    },
    "839": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "840": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2454,
        2457
      ],
      "op": "DUP5",
      "path": "6"
    },
    "841": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2454,
        2457
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "842": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "843": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x355"
    },
    "846": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "847": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2454,
        2457
      ],
      "op": "DUP5",
      "path": "6"
    },
    "848": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2454,
        2457
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "849": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80A"
    },
    "852": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        2425,
        2457
      ],
      "op": "JUMP",
      "path": "6"
    },
    "853": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "854": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "855": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "856": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2425,
        2457
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2467,
        2500
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 5,
      "value": "0x375"
    },
    "861": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2467,
        2500
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x370"
    },
    "866": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2487,
        2490
      ],
      "op": "DUP4",
      "path": "6"
    },
    "867": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2492,
        2498
      ],
      "op": "PUSH8",
      "path": "6",
      "value": "0xDE0B6B3A7640000"
    },
    "876": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2487,
        2499
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x842"
    },
    "879": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMP",
      "path": "6"
    },
    "880": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2487,
        2499
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "881": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2467,
        2486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x53F"
    },
    "884": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        2467,
        2500
      ],
      "op": "JUMP",
      "path": "6"
    },
    "885": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2467,
        2500
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "886": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2467,
        2500
      ],
      "op": "POP",
      "path": "6"
    },
    "887": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 6,
      "value": "0x255FC9735037BA0730909ADCC04691FB7C2DD775114A7E9533ECECEF8248E524"
    },
    "920": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2532,
        2542
      ],
      "op": "CALLER",
      "path": "6"
    },
    "921": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2544,
        2547
      ],
      "op": "DUP4",
      "path": "6"
    },
    "922": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "924": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "925": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A7"
    },
    "928": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "929": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "930": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "931": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6D9"
    },
    "934": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "i",
      "offset": [
        2517,
        2548
      ],
      "op": "JUMP",
      "path": "6"
    },
    "935": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "936": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "938": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "939": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "DUP1",
      "path": "6"
    },
    "940": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "941": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "SUB",
      "path": "6"
    },
    "942": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "943": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2517,
        2548
      ],
      "op": "LOG1",
      "path": "6"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2565,
        2569
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x1"
    },
    "947": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "948": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "949": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        2335,
        2586
      ],
      "op": "POP",
      "path": "6"
    },
    "950": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "o",
      "offset": [
        2335,
        2586
      ],
      "op": "JUMP",
      "path": "6"
    },
    "951": {
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "952": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "954": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "956": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "957": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "959": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "960": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "DUP2",
      "path": "6"
    },
    "961": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "962": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "964": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "965": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "966": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "DUP1",
      "path": "6"
    },
    "967": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "968": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "970": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "971": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "972": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "ADD",
      "path": "6"
    },
    "973": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "974": {
      "fn": "Coop.depositFruitsToCOOP",
      "offset": [
        847,
        895
      ],
      "op": "DUP3",
      "path": "6"
    },
    "975": {
      "fn": "Coop.depositFruitsToCOOP",
      "jump": "o",
      "offset": [
        847,
        895
      ],
      "op": "JUMP",
      "path": "6"
    },
    "976": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "977": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "980": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "983": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "984": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "994": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9"
    },
    "997": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "1000": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1001": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "SUB"
    },
    "1010": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1011": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1012": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40F"
    },
    "1015": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1016": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1018": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1027": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1028": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1030": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1031": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1034": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1035": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "1038": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1039": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1040": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x419"
    },
    "1043": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1045": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D3"
    },
    "1048": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1049": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1050": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1051": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1052": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1054": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 9
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1061": {
      "op": "SHL"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1064": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1065": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1066": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2017,
        2323
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1067": {
      "offset": [
        1400,
        1410
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1068": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2084,
        2088
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1070": {
      "offset": [
        1389,
        1411
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1071": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1389,
        1411
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1072": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1389,
        1411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1073": {
      "offset": [
        1389,
        1399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1075": {
      "offset": [
        1389,
        1411
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1077": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1389,
        1411
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1078": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1389,
        1411
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1080": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1389,
        1411
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1081": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1389,
        1411
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1082": {
      "offset": [
        1389,
        1420
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1083": {
      "offset": [
        1389,
        1425
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1084": {
      "offset": [
        1381,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x457"
    },
    "1087": {
      "offset": [
        1381,
        1459
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1088": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1090": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "offset": [
        1381,
        1459
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1099": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1100": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1102": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "ADD",
      "path": "6"
    },
    "1103": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F5"
    },
    "1106": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1107": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x743"
    },
    "1110": {
      "fn": "Coop.becomeCoopMember",
      "jump": "i",
      "offset": [
        1381,
        1459
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1111": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        1381,
        1459
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1112": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2162,
        2172
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 10
    },
    "1113": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1115": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1116": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1117": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1118": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2161
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "1120": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1122": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1123": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1125": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1126": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1127": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1128": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1129": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2186,
        2195
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1130": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2186,
        2195
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1131": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2173
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1132": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x476"
    },
    "1135": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1136": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2186,
        2195
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1137": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2186,
        2195
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1138": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80A"
    },
    "1141": {
      "fn": "Coop.becomeCoopMember",
      "jump": "i",
      "offset": [
        2151,
        2195
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1142": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1143": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1144": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1145": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2151,
        2195
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x40"
    },
    "1150": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1151": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x7F48E4F7F3EF2C63408B16A799B8516CB879C145386AEDD51A36938A02A1C283"
    },
    "1184": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1185": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AD"
    },
    "1188": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1189": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2264,
        2274
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1190": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2264,
        2274
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1191": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2276,
        2285
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1192": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2276,
        2285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1193": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6D9"
    },
    "1196": {
      "fn": "Coop.becomeCoopMember",
      "jump": "i",
      "offset": [
        2254,
        2286
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1197": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1198": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1200": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1201": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1202": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1203": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "SUB",
      "path": "6"
    },
    "1204": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1205": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2254,
        2286
      ],
      "op": "LOG1",
      "path": "6"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2304,
        2308
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x1"
    },
    "1209": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        2017,
        2323
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1210": {
      "fn": "Coop.becomeCoopMember",
      "jump": "o",
      "offset": [
        2017,
        2323
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1211": {
      "offset": [
        665,
        704
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1212": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1214": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "SUB"
    },
    "1223": {
      "offset": [
        665,
        704
      ],
      "op": "AND",
      "path": "6"
    },
    "1224": {
      "fn": "Coop.becomeCoopMember",
      "offset": [
        665,
        704
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1225": {
      "fn": "Coop.becomeCoopMember",
      "jump": "o",
      "offset": [
        665,
        704
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1227": {
      "offset": [
        1196,
        1208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D2"
    },
    "1230": {
      "offset": [
        1196,
        1206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "1233": {
      "jump": "i",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1196,
        1208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1244": {
      "offset": [
        1185,
        1192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E3"
    },
    "1247": {
      "offset": [
        1185,
        1190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41B"
    },
    "1250": {
      "jump": "i",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1258": {
      "op": "SHL"
    },
    "1259": {
      "op": "SUB"
    },
    "1260": {
      "offset": [
        1185,
        1208
      ],
      "op": "AND",
      "path": "0"
    },
    "1261": {
      "branch": 19,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1262": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x509"
    },
    "1265": {
      "branch": 19,
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B1"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "op": "SUB"
    },
    "1298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "1299": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52F"
    },
    "1303": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1315": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "1319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "1322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FD"
    },
    "1326": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x538"
    },
    "1331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D3"
    },
    "1335": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1337": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "1338": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1339": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1340": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 15
    },
    "1341": {
      "fn": "Context._msgSender",
      "offset": [
        587,
        683
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1342": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        587,
        683
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1343": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2819,
        2958
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1344": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2916
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 16,
      "value": "0x1"
    },
    "1346": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2916
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1347": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2876,
        2880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1349": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2876,
        2880
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2916
      ],
      "op": "AND",
      "path": "6"
    },
    "1359": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2925
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBEABACC8"
    },
    "1364": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2926,
        2933
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55B"
    },
    "1367": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2926,
        2931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41B"
    },
    "1370": {
      "fn": "Coop.coopTokenTransferTo",
      "jump": "i",
      "offset": [
        2926,
        2933
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1371": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2926,
        2933
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1372": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2935,
        2945
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1373": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1374": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1376": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1377": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1378": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "1383": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "AND",
      "path": "6"
    },
    "1384": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "1386": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SHL",
      "path": "6"
    },
    "1387": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1388": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1389": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1391": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ADD",
      "path": "6"
    },
    "1392": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x57B"
    },
    "1395": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1396": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1397": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1398": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1399": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B5"
    },
    "1402": {
      "fn": "Coop.coopTokenTransferTo",
      "jump": "i",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1403": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1404": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1406": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1408": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1409": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1410": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1411": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SUB",
      "path": "6"
    },
    "1412": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1413": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1415": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1416": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1417": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "1418": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1419": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1420": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1421": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x595"
    },
    "1424": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1425": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1427": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1428": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1429": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1430": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "POP",
      "path": "6"
    },
    "1431": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "GAS",
      "path": "6"
    },
    "1432": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "CALL",
      "path": "6"
    },
    "1433": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1434": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1435": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1436": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5A9"
    },
    "1439": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1440": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1441": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1443": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1444": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1445": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1446": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1448": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1449": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1450": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "POP",
      "path": "6"
    },
    "1451": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "POP",
      "path": "6"
    },
    "1452": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "POP",
      "path": "6"
    },
    "1453": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "POP",
      "path": "6"
    },
    "1454": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1456": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1457": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1458": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1460": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "NOT",
      "path": "6"
    },
    "1461": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1463": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1464": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ADD",
      "path": "6"
    },
    "1465": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "AND",
      "path": "6"
    },
    "1466": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1467": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ADD",
      "path": "6"
    },
    "1468": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1469": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1471": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1472": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "POP",
      "path": "6"
    },
    "1473": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1474": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "ADD",
      "path": "6"
    },
    "1475": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1476": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CD"
    },
    "1479": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1480": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1481": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x651"
    },
    "1484": {
      "fn": "Coop.coopTokenTransferTo",
      "jump": "i",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1485": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2907,
        2951
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1486": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2900,
        2951
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1487": {
      "fn": "Coop.coopTokenTransferTo",
      "offset": [
        2819,
        2958
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "op": "POP"
    },
    "1490": {
      "fn": "Coop.coopTokenTransferTo",
      "jump": "o",
      "offset": [
        2819,
        2958
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1491": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1492": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1495": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 17
    },
    "1505": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1506": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "op": "SUB"
    },
    "1515": {
      "op": "NOT"
    },
    "1516": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1517": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1518": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1519": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "1520": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1521": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1522": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "1524": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1525": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1526": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1527": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1528": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1529": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1530": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1531": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1532": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1565": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1566": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1568": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1569": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1570": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1571": {
      "op": "JUMPDEST"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1576": {
      "op": "DUP3"
    },
    "1577": {
      "op": "DUP5"
    },
    "1578": {
      "op": "SUB"
    },
    "1579": {
      "op": "SLT"
    },
    "1580": {
      "op": "ISZERO"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x634"
    },
    "1584": {
      "op": "JUMPI"
    },
    "1585": {
      "op": "DUP1"
    },
    "1586": {
      "op": "DUP2"
    },
    "1587": {
      "op": "REVERT"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "DUP2"
    },
    "1590": {
      "op": "CALLDATALOAD"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "op": "DUP2"
    },
    "1600": {
      "op": "AND"
    },
    "1601": {
      "op": "DUP2"
    },
    "1602": {
      "op": "EQ"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1606": {
      "op": "JUMPI"
    },
    "1607": {
      "op": "DUP2"
    },
    "1608": {
      "op": "DUP3"
    },
    "1609": {
      "op": "REVERT"
    },
    "1610": {
      "op": "JUMPDEST"
    },
    "1611": {
      "op": "SWAP4"
    },
    "1612": {
      "op": "SWAP3"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "jump": "o",
      "op": "JUMP"
    },
    "1617": {
      "op": "JUMPDEST"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1622": {
      "op": "DUP3"
    },
    "1623": {
      "op": "DUP5"
    },
    "1624": {
      "op": "SUB"
    },
    "1625": {
      "op": "SLT"
    },
    "1626": {
      "op": "ISZERO"
    },
    "1627": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1630": {
      "op": "JUMPI"
    },
    "1631": {
      "op": "DUP1"
    },
    "1632": {
      "op": "DUP2"
    },
    "1633": {
      "op": "REVERT"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "DUP2"
    },
    "1636": {
      "op": "MLOAD"
    },
    "1637": {
      "op": "DUP1"
    },
    "1638": {
      "op": "ISZERO"
    },
    "1639": {
      "op": "ISZERO"
    },
    "1640": {
      "op": "DUP2"
    },
    "1641": {
      "op": "EQ"
    },
    "1642": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1645": {
      "op": "JUMPI"
    },
    "1646": {
      "op": "DUP2"
    },
    "1647": {
      "op": "DUP3"
    },
    "1648": {
      "op": "REVERT"
    },
    "1649": {
      "op": "JUMPDEST"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1654": {
      "op": "DUP3"
    },
    "1655": {
      "op": "DUP5"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "op": "SLT"
    },
    "1658": {
      "op": "ISZERO"
    },
    "1659": {
      "op": "PUSH2",
      "value": "0x682"
    },
    "1662": {
      "op": "JUMPI"
    },
    "1663": {
      "op": "DUP1"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "REVERT"
    },
    "1666": {
      "op": "JUMPDEST"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "CALLDATALOAD"
    },
    "1669": {
      "op": "SWAP2"
    },
    "1670": {
      "op": "SWAP1"
    },
    "1671": {
      "op": "POP"
    },
    "1672": {
      "jump": "o",
      "op": "JUMP"
    },
    "1673": {
      "op": "JUMPDEST"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1678": {
      "op": "DUP3"
    },
    "1679": {
      "op": "DUP5"
    },
    "1680": {
      "op": "SUB"
    },
    "1681": {
      "op": "SLT"
    },
    "1682": {
      "op": "ISZERO"
    },
    "1683": {
      "op": "PUSH2",
      "value": "0x69A"
    },
    "1686": {
      "op": "JUMPI"
    },
    "1687": {
      "op": "DUP1"
    },
    "1688": {
      "op": "DUP2"
    },
    "1689": {
      "op": "REVERT"
    },
    "1690": {
      "op": "JUMPDEST"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "MLOAD"
    },
    "1693": {
      "op": "SWAP2"
    },
    "1694": {
      "op": "SWAP1"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "jump": "o",
      "op": "JUMP"
    },
    "1697": {
      "op": "JUMPDEST"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "op": "SWAP2"
    },
    "1707": {
      "op": "SWAP1"
    },
    "1708": {
      "op": "SWAP2"
    },
    "1709": {
      "op": "AND"
    },
    "1710": {
      "op": "DUP2"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "op": "SWAP1"
    },
    "1716": {
      "jump": "o",
      "op": "JUMP"
    },
    "1717": {
      "op": "JUMPDEST"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1724": {
      "op": "SHL"
    },
    "1725": {
      "op": "SUB"
    },
    "1726": {
      "op": "SWAP4"
    },
    "1727": {
      "op": "DUP5"
    },
    "1728": {
      "op": "AND"
    },
    "1729": {
      "op": "DUP2"
    },
    "1730": {
      "op": "MSTORE"
    },
    "1731": {
      "op": "SWAP2"
    },
    "1732": {
      "op": "SWAP1"
    },
    "1733": {
      "op": "SWAP3"
    },
    "1734": {
      "op": "AND"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1737": {
      "op": "DUP3"
    },
    "1738": {
      "op": "ADD"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1742": {
      "op": "DUP2"
    },
    "1743": {
      "op": "ADD"
    },
    "1744": {
      "op": "SWAP2"
    },
    "1745": {
      "op": "SWAP1"
    },
    "1746": {
      "op": "SWAP2"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "op": "SWAP1"
    },
    "1752": {
      "jump": "o",
      "op": "JUMP"
    },
    "1753": {
      "op": "JUMPDEST"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1760": {
      "op": "SHL"
    },
    "1761": {
      "op": "SUB"
    },
    "1762": {
      "op": "SWAP3"
    },
    "1763": {
      "op": "SWAP1"
    },
    "1764": {
      "op": "SWAP3"
    },
    "1765": {
      "op": "AND"
    },
    "1766": {
      "op": "DUP3"
    },
    "1767": {
      "op": "MSTORE"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1770": {
      "op": "DUP3"
    },
    "1771": {
      "op": "ADD"
    },
    "1772": {
      "op": "MSTORE"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1775": {
      "op": "ADD"
    },
    "1776": {
      "op": "SWAP1"
    },
    "1777": {
      "jump": "o",
      "op": "JUMP"
    },
    "1778": {
      "op": "JUMPDEST"
    },
    "1779": {
      "op": "SWAP1"
    },
    "1780": {
      "op": "ISZERO"
    },
    "1781": {
      "op": "ISZERO"
    },
    "1782": {
      "op": "DUP2"
    },
    "1783": {
      "op": "MSTORE"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1786": {
      "op": "ADD"
    },
    "1787": {
      "op": "SWAP1"
    },
    "1788": {
      "jump": "o",
      "op": "JUMP"
    },
    "1789": {
      "op": "JUMPDEST"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1792": {
      "op": "DUP1"
    },
    "1793": {
      "op": "DUP3"
    },
    "1794": {
      "op": "MSTORE"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1797": {
      "op": "SWAP1"
    },
    "1798": {
      "op": "DUP3"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "MSTORE"
    },
    "1801": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1836": {
      "op": "DUP3"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1848": {
      "op": "SHL"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1851": {
      "op": "DUP3"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "MSTORE"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "SWAP1"
    },
    "1858": {
      "jump": "o",
      "op": "JUMP"
    },
    "1859": {
      "op": "JUMPDEST"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1862": {
      "op": "DUP1"
    },
    "1863": {
      "op": "DUP3"
    },
    "1864": {
      "op": "MSTORE"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1867": {
      "op": "SWAP1"
    },
    "1868": {
      "op": "DUP3"
    },
    "1869": {
      "op": "ADD"
    },
    "1870": {
      "op": "MSTORE"
    },
    "1871": {
      "op": "PUSH32",
      "value": "0x596F7520616C726561647920706179206D656265727368697020666565000000"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1906": {
      "op": "DUP3"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "MSTORE"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1911": {
      "op": "ADD"
    },
    "1912": {
      "op": "SWAP1"
    },
    "1913": {
      "jump": "o",
      "op": "JUMP"
    },
    "1914": {
      "op": "JUMPDEST"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1917": {
      "op": "DUP1"
    },
    "1918": {
      "op": "DUP3"
    },
    "1919": {
      "op": "MSTORE"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1922": {
      "op": "SWAP1"
    },
    "1923": {
      "op": "DUP3"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "op": "MSTORE"
    },
    "1926": {
      "op": "PUSH32",
      "value": "0x506C65617365206265636F6D6520536D617274434F4F50206D656D6265720000"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "ADD"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "SWAP1"
    },
    "1968": {
      "jump": "o",
      "op": "JUMP"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1972": {
      "op": "DUP1"
    },
    "1973": {
      "op": "DUP3"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "DUP2"
    },
    "1976": {
      "op": "DUP2"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2014": {
      "op": "DUP3"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "op": "SWAP1"
    },
    "2021": {
      "jump": "o",
      "op": "JUMP"
    },
    "2022": {
      "op": "JUMPDEST"
    },
    "2023": {
      "op": "SWAP2"
    },
    "2024": {
      "op": "DUP3"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2028": {
      "op": "DUP3"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "SWAP1"
    },
    "2035": {
      "jump": "o",
      "op": "JUMP"
    },
    "2036": {
      "op": "JUMPDEST"
    },
    "2037": {
      "op": "SWAP3"
    },
    "2038": {
      "op": "DUP4"
    },
    "2039": {
      "op": "MSTORE"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2042": {
      "op": "DUP4"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "op": "SWAP2"
    },
    "2045": {
      "op": "SWAP1"
    },
    "2046": {
      "op": "SWAP2"
    },
    "2047": {
      "op": "MSTORE"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2050": {
      "op": "DUP3"
    },
    "2051": {
      "op": "ADD"
    },
    "2052": {
      "op": "MSTORE"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "op": "SWAP1"
    },
    "2057": {
      "jump": "o",
      "op": "JUMP"
    },
    "2058": {
      "op": "JUMPDEST"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2061": {
      "op": "DUP3"
    },
    "2062": {
      "op": "NOT"
    },
    "2063": {
      "op": "DUP3"
    },
    "2064": {
      "op": "GT"
    },
    "2065": {
      "op": "ISZERO"
    },
    "2066": {
      "op": "PUSH2",
      "value": "0x81D"
    },
    "2069": {
      "op": "JUMPI"
    },
    "2070": {
      "op": "PUSH2",
      "value": "0x81D"
    },
    "2073": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2076": {
      "jump": "i",
      "op": "JUMP"
    },
    "2077": {
      "op": "JUMPDEST"
    },
    "2078": {
      "op": "POP"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "op": "SWAP1"
    },
    "2081": {
      "jump": "o",
      "op": "JUMP"
    },
    "2082": {
      "op": "JUMPDEST"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2085": {
      "op": "DUP3"
    },
    "2086": {
      "op": "PUSH2",
      "value": "0x83D"
    },
    "2089": {
      "op": "JUMPI"
    },
    "2090": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2097": {
      "op": "SHL"
    },
    "2098": {
      "op": "DUP2"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2104": {
      "op": "MSTORE"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2107": {
      "op": "DUP2"
    },
    "2108": {
      "op": "REVERT"
    },
    "2109": {
      "op": "JUMPDEST"
    },
    "2110": {
      "op": "POP"
    },
    "2111": {
      "op": "DIV"
    },
    "2112": {
      "op": "SWAP1"
    },
    "2113": {
      "jump": "o",
      "op": "JUMP"
    },
    "2114": {
      "op": "JUMPDEST"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2117": {
      "op": "DUP2"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2120": {
      "op": "NOT"
    },
    "2121": {
      "op": "DIV"
    },
    "2122": {
      "op": "DUP4"
    },
    "2123": {
      "op": "GT"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "ISZERO"
    },
    "2126": {
      "op": "ISZERO"
    },
    "2127": {
      "op": "AND"
    },
    "2128": {
      "op": "ISZERO"
    },
    "2129": {
      "op": "PUSH2",
      "value": "0x85C"
    },
    "2132": {
      "op": "JUMPI"
    },
    "2133": {
      "op": "PUSH2",
      "value": "0x85C"
    },
    "2136": {
      "op": "PUSH2",
      "value": "0x861"
    },
    "2139": {
      "jump": "i",
      "op": "JUMP"
    },
    "2140": {
      "op": "JUMPDEST"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "MUL"
    },
    "2143": {
      "op": "SWAP1"
    },
    "2144": {
      "jump": "o",
      "op": "JUMP"
    },
    "2145": {
      "op": "JUMPDEST"
    },
    "2146": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2156": {
      "op": "MSTORE"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2161": {
      "op": "MSTORE"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2166": {
      "op": "REVERT"
    }
  },
  "sha1": "17d87788e286e5d1013f42e44eadc69bb9bec0c0",
  "source": "// SPDX-License-Identifier: MIT\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n    @title SmartCOOP \n    @notice COOP token is based on the OpenZeppelin ERC-20 token standard as defined at\n            https://github.com/OpenZeppelin/openzeppelin-contracts/tree/master/contracts/token/ERC20\n            \n            Ownable is definied on following OpenZeppelin address ->\n            https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/\n */\n\n\n\npragma solidity 0.8.0;\n\n\ncontract Coop is Ownable {\n   \n    /* State variables\n     */\n\n    ERC20 private coopToken;\n\n    address public coopTokenContractAddress;  \n        \n    struct Cooperant {\n        uint feePayed;\n        uint kg;\n    } \n    \n    // promenio sam iz private u public zbog testa\n    mapping (address => Cooperant) public cooperants;      \n        \n    constructor (address contractAddress) {\n       coopTokenContractAddress = contractAddress;\n       coopToken = ERC20(contractAddress);     \n    } \n\n    /* Events \n     */\n\n    event NewMember (address sender, uint amount);\n    event DepositFruits (address cooperant, uint kilograms);\n   \n    modifier onlyMembers() {\n        require (cooperants[msg.sender].feePayed != 0, \"Please become SmartCOOP member\");\n        _;\n    }\n\n    modifier onlyNewMembers () {\n        require(cooperants[msg.sender].feePayed == 0, \"You already pay mebership fee\");\n        _;\n    }\n\n    /* Functions\n     */ \n     \n    fallback () external {\n        revert();\n    }\n\n    // WIDROW FUNCTION\n    function withdraw(uint _amount) public payable onlyOwner returns (bool) {\n        // Da li ovde treba dva payable\n        payable(owner()).transfer(_amount);\n        // try out with this syntax\n        // (bool sent, bytes memory data)  = owner().call{value:_amount}(\"\");       \n        // require(sent, \"Failed to send Ether\");\n        return true;\n    }\n    \n    // Uneo sam _amount a ova funkcija je bila bez argumenata\n    function becomeCoopMember() public payable onlyNewMembers returns (bool) {        \n        // promenio sam msg.vale u _amount\n        cooperants[msg.sender].feePayed += msg.value; \n        // promenio sam msg.vale u _amount\n        emit NewMember(msg.sender, msg.value); \n        return true;        \n    }      \n\n    function depositFruitsToCOOP(uint _kg) public onlyMembers returns (bool) {       \n        cooperants[msg.sender].kg += _kg;\n        coopTokenTransferTo(_kg*(10**18));  \n        emit DepositFruits (msg.sender, _kg);\n        return true;          \n    }    \n    \n    function getUserAccountBalance(address _salje) public view returns (uint256, uint256, uint256) {\n        return (cooperants[_salje].feePayed, cooperants[_salje].kg, coopToken.balanceOf(_salje)/(10**18));\n    }\n    \n    function coopTokenTransferTo (uint _kg) private returns (bool) {        \n        return coopToken.transfer(owner(), msg.sender, _kg);\n    }      \n    \n    function coopTokenTransferFrom (uint _kg) private onlyMembers returns (bool) {        \n        return coopToken.transfer(msg.sender, owner(), _kg);\n    }      \n}",
  "sourceMap": "568:2567:6:-:0;;;916:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;877:12;:10;:12::i;:::-;867:9;:23::i;:::-;963:24:6;:42;;-1:-1:-1;;;;;963:42:6;;;-1:-1:-1;;;;;;963:42:6;;;;;;;;;1014:34;;;;;;;;568:2567;;587:96:4;666:10;587:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:310:7:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:7;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:7:o;:::-;568:2567:6;;;;;;",
  "sourcePath": "contracts/Coop.sol",
  "type": "contract"
}